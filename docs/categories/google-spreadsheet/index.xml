<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Spreadsheet on </title>
    <link>https://blog.rudylee.com/blog/categories/google-spreadsheet/</link>
    <description>Recent content in Google Spreadsheet on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.rudylee.com/blog/categories/google-spreadsheet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Spreadsheet as JSON API</title>
      <link>https://blog.rudylee.com/blog/2017/12/25/google-spreadsheet-as-json-api/</link>
      <pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.rudylee.com/blog/2017/12/25/google-spreadsheet-as-json-api/</guid>
      <description>Data store is an important piece in most of the modern applications. The implementation can range from a simple text file to a complicated database systems. In this blog post, I will show you how to use Google Spreadsheet as a data store for your application.
Google Spreadsheet provides a convenient way to store, edit, share and retrieve data. This makes Google Spreadsheet appealing if you want to quickly prototype an app and don&amp;rsquo;t want to spend time building a CRUD interface to manage your data.</description>
    </item>
    
  </channel>
</rss>